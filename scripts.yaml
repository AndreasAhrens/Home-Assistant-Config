  bedroom_late:
    sequence:
      # First turn on the scene Bedroom Dim. This sets brightness to 24 (so about 10%). 
      # Then wait one minute, move to very dim, brightness 2, in 15 minutes and then turn off both.
      - service: scene.turn_on
        entity_id: scene.bedroom_dim
      - delay: '00:01'
      - service: scene.turn_on
        entity_id: scene.bedroom_very_dim
      - delay: '00:15'
      - service: homeassistant.turn_off
        entity_id:
          - light.his_bedside
          - light.her_bedside

  night_mode:
    sequence:
      # This is written using the Script Syntax
      - service: scene.turn_on
        entity_id: scene.night_mode

  update_config:
    sequence:
      - service: shell_command.get_latest_config

  plant_watering_script:
    sequence:
      - service: homeassistant.turn_on
        entity_id:  
          - switch.plant_watering_system
      - delay: '00:00:02'
      - service: homeassistant.turn_off
        entity_id:
          - switch.plant_watering_system
      - service: mqtt.publish
        data:
         topic: "/inside/livingroom/plantwatering/time"
         payload_template:  '{{ as_timestamp(now()) }}' #'{{now().strftime("%Y%m%d-%H%M%S")}}'

  calculate_time_since_last_watering:
    sequence:
      - service: mqtt.publish
        data:
          topic: "/inside/livingroom/plantwatering/sincelasttime"
          # payload_template:  '{{ as_timestamp(now()) - as_timestamp(states.script.plant_watering_script.last_triggered)  }}'
          payload_template:  '{{ as_timestamp(states.script.plant_watering_script.last_triggered)  }}'
          # script.plant_watering_script
          #payload_template:  '{{ as_timestamp(now()) - states.sensor.plant_watering_last_time.state  }}'


  #       {% if states.calendar.nathan_tech_shop %}
  #    {% if is_state("calendar.nathan_tech_shop", "on") and as_timestamp(states.calendar.nathan_tech_shop.attributes.end_time) - as_timestamp(now()) < 900  %}on{% else %}off{% endif %}
  #{% else %}off{% endif %}

  test_script:
    sequence:
      - service: tts.google_say
        data_template:
          entity_id: media_player.kitchen_audio
          message: 'Good morning'
      - service: media_player.select_source
        data:
          entity_id: media_player.spotify
          source: Kitchen Audio
      - service: media_player.shuffle_set
        data: 
          entity_id: media_player.spotify
          shuffle: 'true'
      - service: media_player.play_media
        data:
          entity_id: media_player.kitchen_audio
          media_content_type: playlist
        data_template:
          media_content_id: 'spotify:user:spotify:playlist:37i9dQZF1DX5OepaGriAIm'

      #- service: media_player.volume_set
      #  data:
      #    entity_id: media_player.kitchen_audio
      #    volume_level: 0.40
      ## Set shuffle to true
      #- service: media_player.shuffle_set
      #  data: 
      #    entity_id: media_player.spotify
      #    shuffle: true
      ## Set the source for spotify to the kitchen Chromecast
      #- service: media_player.select_source 
      #  data:
      #    entity_id: media_player.spotify
      #    source: "Kitchen Audio"
      ## Play the Women of Jazz playlist
      #- service: media_player.play_media
      #  data:
      #    entity_id: media_player.spotify
      #    media_content_type: "PLAYLIST"
      #    media_content_id: "spotify:user:spotify:playlist:37i9dQZF1DX5OepaGriAIm"
     
